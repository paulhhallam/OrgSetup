{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "PSA Basic instance-scheduler, version v1.3.2",
    "Parameters": {
        "SchedulingActive": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "Yes",
            "Description": "Activate or deactivate scheduling."
        },
        "ScheduledServices": {
            "Type": "String",
            "AllowedValues": [
                "EC2",
                "RDS",
                "Both"
            ],
            "Default": "Both",
            "Description": "Scheduled Services."
        },
        "ScheduleRdsClusters": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "No",
            "Description": "Enable scheduling of Aurora clusters for RDS Service."
        },
        "CreateRdsSnapshot": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "Yes",
            "Description": "Create snapshot before stopping RDS instances(does not apply to Aurora Clusters)."
        },
        "MemorySize": {
            "Type": "Number",
            "AllowedValues": [
                128,
                384,
                512,
                640,
                768,
                896,
                1024,
                1152,
                1280,
                1408,
                1536
            ],
            "Default": 128,
            "Description": "Size of the Lambda function running the scheduler, increase size when processing large numbers of instances"
        },
        "UseCloudWatchMetrics": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "No",
            "Description": "Collect instance scheduling data using CloudWatch metrics."
        },
        "LogRetentionDays": {
            "Type": "Number",
            "Default": 30,
            "AllowedValues": [
                1,
                3,
                5,
                7,
                14,
                30,
                60,
                90,
                120,
                150,
                180,
                365,
                400,
                545,
                731,
                1827,
                3653
            ],
            "Description": "Retention days for scheduler logs."
        },
        "Trace": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "No",
            "Description": "Enable logging of detailed informtion in CloudWatch logs."
        },
        "TagName": {
            "Type": "String",
            "Default": "Schedule",
            "MinLength": 1,
            "MaxLength": 127,
            "Description": "Name of tag to use for associating instance schedule schemas with service instances."
        },
        "DefaultTimezone": {
            "Type": "String",
            "Default": "GMT",
            "AllowedValues": [
                "Europe/London",
                "GMT",
                "UTC"
            ],
            "Description": "Choose the default Time Zone. Default is 'UTC'"
        },
        "Regions": {
            "Type": "CommaDelimitedList",
            "Description": "List of regions in which instances are scheduled, leave blank for current region only."
        },
        "CrossAccountRoles": {
            "Type": "CommaDelimitedList",
            "Description": "Comma separated list of ARN's for cross account access roles. These roles must be created in all checked accounts the scheduler to start and stop instances."
        },
        "StartedTags": {
            "Type": "String",
            "Description": "Comma separated list of tagname and values on the formt name=value,name=value,.. that are set on started instances"
        },
        "StoppedTags": {
            "Type": "String",
            "Description": "Comma separated list of tagname and values on the formt name=value,name=value,.. that are set on stopped instances"
        },
        "SchedulerFrequency": {
            "Type": "String",
            "AllowedValues": [
                "1",
                "2",
                "5",
                "10",
                "15",
                "30",
                "60"
            ],
            "Default": "5",
            "Description": "Scheduler running frequency in minutes."
        },
        "ScheduleLambdaAccount": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "Yes",
            "Description": "Schedule instances in this account."
        },
        "SendAnonymousData": {
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "Yes",
            "Description": "Send Anonymous Metrics Data."
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Scheduler (version v1.3.2)"
                    },
                    "Parameters": [
                        "TagName",
                        "ScheduledServices",
                        "ScheduleRdsClusters",
                        "CreateRdsSnapshot",
                        "SchedulingActive",
                        "Regions",
                        "DefaultTimezone",
                        "CrossAccountRoles",
                        "ScheduleLambdaAccount",
                        "SchedulerFrequency",
                        "MemorySize"
                    ]
                },
                {
                    "Label": {
                        "default": "Options"
                    },
                    "Parameters": [
                        "UseCloudWatchMetrics",
                        "SendAnonymousData",
                        "Trace"
                    ]
                },
                {
                    "Label": {
                        "default": "Other parameters"
                    },
                    "Parameters": [
                        "LogRetentionDays",
                        "StartedTags",
                        "StoppedTags"
                    ]
                }
            ],
            "ParameterLabels": {
                "LogRetentionDays": {
                    "default": "Log retention days"
                },
                "StartedTags": {
                    "default": "Started tags"
                },
                "StoppedTags": {
                    "default": "Stopped tags"
                },
                "SchedulingActive": {
                    "default": "Scheduling enabled"
                },
                "CrossAccountRoles": {
                    "default": "Cross-account roles"
                },
                "ScheduleLambdaAccount": {
                    "default": "This account"
                },
                "UseCloudWatchMetrics": {
                    "default": "Enable CloudWatch Metrics"
                },
                "Trace": {
                    "default": "Enable CloudWatch Logs"
                },
                "TagName": {
                    "default": "Instance Scheduler tag name"
                },
                "ScheduledServices": {
                    "default": "Service(s) to schedule"
                },
                "ScheduleRdsClusters": {
                    "default": "Schedule Aurora Clusters"
                },
                "CreateRdsSnapshot": {
                    "default": "Create RDS instance snapshot"
                },
                "DefaultTimezone": {
                    "default": "Default time zone"
                },
                "SchedulerFrequency": {
                    "default": "Frequency"
                },
                "Regions": {
                    "default": "Region(s)"
                },
                "MemorySize": {
                    "default": "Memory size"
                },
                "SendAnonymousData": {
                    "default": "Send anonymous usage data"
                }
            }
        }
    },
    "Mappings": {
        "TrueFalse": {
            "Yes": {
                "Value": "True"
            },
            "No": {
                "Value": "False"
            }
        },
        "EnabledDisabled": {
            "Yes": {
                "Value": "ENABLED"
            },
            "No": {
                "Value": "DISABLED"
            }
        },
        "Services": {
            "EC2": {
                "Value": "ec2"
            },
            "RDS": {
                "Value": "rds"
            },
            "Both": {
                "Value": "ec2,rds"
            }
        },
        "Timeouts": {
            "1": {
                "Value": "cron(0/1 * * * ? *)"
            },
            "2": {
                "Value": "cron(0/2 * * * ? *)"
            },
            "5": {
                "Value": "cron(0/5 * * * ? *)"
            },
            "10": {
                "Value": "cron(0/10 * * * ? *)"
            },
            "15": {
                "Value": "cron(0/15 * * * ? *)"
            },
            "30": {
                "Value": "cron(0/30 * * * ? *)"
            },
            "60": {
                "Value": "cron(0 0/1 * * ? *)"
            }
        },
        "Settings": {
            "Metrics": {
                "Url": "https://metrics.awssolutionsbuilder.com/generic",
                "SolutionId": "S00030"
            },
            "RdsTagCaching": {
                "Enabled": "True"
            }
        }
    },
    "Resources": {
        "InstanceSchedulerEncryptionKey": {
            "Type": "AWS::KMS::Key",
            "Properties": {
                "Description": "Key for SNS",
                "Enabled": true,
                "EnableKeyRotation": true,
                "KeyPolicy": {
                    "Statement": [
                        {
                            "Sid": "default",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
                                }
                            },
                            "Action": "kms:*",
                            "Resource": "*"
                        },
                        {
                            "Sid": "Allows use of key",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::GetAtt": [
                                        "SchedulerRole",
                                        "Arn"
                                    ]
                                }
                            },
                            "Action": [
                                "kms:GenerateDataKey*",
                                "kms:Decrypt"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Tags": [
                    {
                    "Key": "cloudformation:stack-name",
                    "Value": "PHHInstanceScheduler"
                    }
                ]
            }
        },
        "InstanceSchedulerEncryptionKeyAlias": {
            "Type": "AWS::KMS::Alias",
            "Properties": {
                "AliasName": "alias/instance-scheduler-encryption-key",
                "TargetKeyId": {
                    "Ref": "InstanceSchedulerEncryptionKey"
                }
            }
        },
        "EC2DynamoDBPolicy": {
            "Type": "AWS::IAM::Policy",
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W12",
                            "reason": "All policies have been scoped to be as restrictive as possible. This solution needs to access ec2/rds resources across all regions."
                        }
                    ]
                }
            },
            "Properties": {
                "PolicyName": "EC2DynamoDBPolicy",
                "Roles": [
                    {
                        "Ref": "SchedulerRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:DeleteItem",
                                "dynamodb:GetItem",
                                "dynamodb:PutItem",
                                "dynamodb:Query",
                                "dynamodb:Scan",
                                "dynamodb:BatchWriteItem"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::Join": [
                                                    ":",
                                                    [
                                                        "arn:aws:dynamodb",
                                                        {
                                                            "Ref": "AWS::Region"
                                                        },
                                                        {
                                                            "Ref": "AWS::AccountId"
                                                        },
                                                        "table/"
                                                    ]
                                                ]
                                            },
                                            {
                                                "Ref": "StateTable"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::Join": [
                                                    ":",
                                                    [
                                                        "arn:aws:dynamodb",
                                                        {
                                                            "Ref": "AWS::Region"
                                                        },
                                                        {
                                                            "Ref": "AWS::AccountId"
                                                        },
                                                        "table/"
                                                    ]
                                                ]
                                            },
                                            {
                                                "Ref": "ConfigTable"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::Join": [
                                                    ":",
                                                    [
                                                        "arn:aws:dynamodb",
                                                        {
                                                            "Ref": "AWS::Region"
                                                        },
                                                        {
                                                            "Ref": "AWS::AccountId"
                                                        },
                                                        "table/"
                                                    ]
                                                ]
                                            },
                                            {
                                                "Ref": "MaintenanceWindowTable"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:PutRetentionPolicy"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:logs",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "log-group",
                                            {
                                                "Ref": "SchedulerLogGroup"
                                            },
                                            "*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:logs",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "log-group:/aws/lambda/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:DescribeLogStreams",
                                "rds:DescribeDBClusters",
                                "rds:DescribeDBInstances",
                                "ec2:DescribeInstances",
                                "ec2:DescribeRegions",
                                "ec2:ModifyInstanceAttribute",
                                "cloudwatch:PutMetricData",
                                "ssm:DescribeMaintenanceWindows",
                                "tag:GetResources"
                            ],
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Resource": [
                                "arn:aws:iam::*:role/*EC2SchedulerCross*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ssm:GetParameter",
                                "ssm:GetParameters"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    ":",
                                    [
                                        "arn:aws:ssm:*",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "parameter/*"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "SchedulerPolicy": {
            "Type": "AWS::IAM::Policy",
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W12",
                            "reason": "All policies have been scoped to be as restrictive as possible. This solution needs to access ec2/rds resources across all regions."
                        }
                    ]
                }
            },
            "Properties": {
                "PolicyName": "SchedulerPolicy",
                "Roles": [
                    {
                        "Ref": "SchedulerRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "rds:DeleteDBSnapshot",
                                "rds:DescribeDBSnapshots",
                                "rds:StopDBInstance"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    ":",
                                    [
                                        "arn:aws:rds:*",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "snapshot:*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "rds:AddTagsToResource",
                                "rds:RemoveTagsFromResource",
                                "rds:DescribeDBSnapshots",
                                "rds:StartDBInstance",
                                "rds:StopDBInstance"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    ":",
                                    [
                                        "arn:aws:rds:*",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "db:*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "rds:AddTagsToResource",
                                "rds:RemoveTagsFromResource",
                                "rds:StartDBCluster",
                                "rds:StopDBCluster"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:rds:*",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "cluster:*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:StartInstances",
                                "ec2:StopInstances",
                                "ec2:CreateTags",
                                "ec2:DeleteTags"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:ec2:*",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "instance/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": "sns:Publish",
                            "Resource": [
                                {
                                    "Ref": "InstanceSchedulerSnsTopic"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "lambda:InvokeFunction"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:lambda",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "function",
                                            {
                                                "Fn::Join": [
                                                    "-",
                                                    [
                                                        {
                                                            "Ref": "AWS::StackName"
                                                        },
                                                        "InstanceSchedulerMain"
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "kms:GenerateDataKey*",
                                "kms:Decrypt"
                            ],
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "InstanceSchedulerEncryptionKey",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "SchedulerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "events.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Tags": [
                    {
                    "Key": "cloudformation:stack-name",
                    "Value": "PHHInstanceScheduler"
                    }
                ]
            }
        },
        "StateTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "service",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "account-region",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "service",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "account-region",
                        "KeyType": "RANGE"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "SSESpecification": {
                    "SSEType": "KMS",
                    "SSEEnabled": "True",
                    "KMSMasterKeyId": {
                        "Ref": "InstanceSchedulerEncryptionKey"
                    }
                },
                "Tags": [
                    {
                    "Key": "cloudformation:stack-name",
                    "Value": "PHHInstanceScheduler"
                    }
                ]
            }
        },
        "ConfigTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "type",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "name",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "type",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "name",
                        "KeyType": "RANGE"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "SSESpecification": {
                    "SSEType": "KMS",
                    "SSEEnabled": "True",
                    "KMSMasterKeyId": {
                        "Ref": "InstanceSchedulerEncryptionKey"
                    }
                },
                "Tags": [
                    {
                    "Key": "cloudformation:stack-name",
                    "Value": "PHHInstanceScheduler"
                    }
                ]
            }
        },
        "MaintenanceWindowTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "Name",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "Name",
                        "KeyType": "HASH"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "SSESpecification": {
                    "SSEType": "KMS",
                    "SSEEnabled": "True",
                    "KMSMasterKeyId": {
                        "Ref": "InstanceSchedulerEncryptionKey"
                    }
                },
                "TimeToLiveSpecification": {
                    "AttributeName": "TimeToLive",
                    "Enabled": "TRUE"
                },
                "Tags": [
                    {
                    "Key": "cloudformation:stack-name",
                    "Value": "PHHInstanceScheduler"
                    }
                ]
            }
        },
        "SchedulerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "logs"
                        ]
                    ]
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "InstanceSchedulerSnsTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "KmsMasterKeyId": {
                    "Ref": "InstanceSchedulerEncryptionKey"
                },
                "DisplayName": {
                    "Ref": "AWS::StackName"
                },
                "Tags": [
                    {
                    "Key": "cloudformation:stack-name",
                    "Value": "PHHInstanceScheduler"
                    }
                ]
            }
        },
        "Main": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W58",
                            "reason": "All policies have been scoped to be as restrictive as possible. This lambda function has access to write logs."
                        }
                    ]
                }
            },
            "Properties": {
                "FunctionName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "InstanceSchedulerMain"
                        ]
                    ]
                },
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "-",
                            [
                                "solutions",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "aws-instance-scheduler/v1.3.2/instance-scheduler.zip"
                },
                "Handler": "main.lambda_handler",
                "Runtime": "python3.7",
                "Role": {
                    "Fn::GetAtt": [
                        "SchedulerRole",
                        "Arn"
                    ]
                },
                "Environment": {
                    "Variables": {
                        "CONFIG_TABLE": {
                            "Ref": "ConfigTable"
                        },
                        "MAINTENANCE_WINDOW_TABLE": {
                            "Ref": "MaintenanceWindowTable"
                        },
                        "SCHEDULER_FREQUENCY": {
                            "Ref": "SchedulerFrequency"
                        },
                        "TAG_NAME": {
                            "Ref": "TagName"
                        },
                        "STATE_TABLE": {
                            "Ref": "StateTable"
                        },
                        "LOG_GROUP": {
                            "Ref": "SchedulerLogGroup"
                        },
                        "ACCOUNT": {
                            "Ref": "AWS::AccountId"
                        },
                        "ISSUES_TOPIC_ARN": {
                            "Ref": "InstanceSchedulerSnsTopic"
                        },
                        "STACK_NAME": {
                            "Ref": "AWS::StackName"
                        },
                        "BOTO_RETRY": "5,10,30,0.25",
                        "ENV_BOTO_RETRY_LOGGING": "False",
                        "SEND_METRICS": {
                            "Fn::FindInMap": [
                                "TrueFalse",
                                {
                                    "Ref": "SendAnonymousData"
                                },
                                "Value"
                            ]
                        },
                        "SOLUTION_ID": {
                            "Fn::FindInMap": [
                                "Settings",
                                "Metrics",
                                "SolutionId"
                            ]
                        },
                        "TRACE": {
                            "Fn::FindInMap": [
                                "TrueFalse",
                                {
                                    "Ref": "Trace"
                                },
                                "Value"
                            ]
                        },
                        "USER_AGENT": {
                            "Fn::Join": [
                                "-",
                                [
                                    "InstanceScheduler",
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "v1.3.2"
                                ]
                            ]
                        },
                        "METRICS_URL": {
                            "Fn::FindInMap": [
                                "Settings",
                                "Metrics",
                                "Url"
                            ]
                        },
                        "SCHEDULER_RULE": {
                            "Ref": "SchedulerRule"
                        }
                    }
                },
                "MemorySize": {
                    "Ref": "MemorySize"
                },
                "Timeout": 300,
                "Description": "EC2 and RDS instance scheduler, version v1.3.2"
            },
            "DependsOn": [
                "SchedulerPolicy",
                "EC2DynamoDBPolicy"
            ]
        },
        "SchedulerInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::Join": [
                        ":",
                        [
                            "arn:aws:lambda",
                            {
                                "Ref": "AWS::Region"
                            },
                            {
                                "Ref": "AWS::AccountId"
                            },
                            "function",
                            {
                                "Fn::Join": [
                                    "-",
                                    [
                                        {
                                            "Ref": "AWS::StackName"
                                        },
                                        "InstanceSchedulerMain"
                                    ]
                                ]
                            }
                        ]
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "SchedulerRule",
                        "Arn"
                    ]
                }
            },
            "DependsOn": "Main"
        },
        "SchedulerRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Instance Scheduler - Rule to trigger instance for scheduler function version v1.3.2",
                "ScheduleExpression": {
                    "Fn::FindInMap": [
                        "Timeouts",
                        {
                            "Ref": "SchedulerFrequency"
                        },
                        "Value"
                    ]
                },
                "State": {
                    "Fn::FindInMap": [
                        "EnabledDisabled",
                        {
                            "Ref": "SchedulingActive"
                        },
                        "Value"
                    ]
                },
                "Targets": [
                    {
                        "Id": "MainFunction",
                        "Arn": {
                            "Fn::Join": [
                                ":",
                                [
                                    "arn:aws:lambda",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    "function",
                                    {
                                        "Fn::Join": [
                                            "-",
                                            [
                                                {
                                                    "Ref": "AWS::StackName"
                                                },
                                                "InstanceSchedulerMain"
                                            ]
                                        ]
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "SchedulerConfigHelper": {
            "Type": "Custom::ServiceSetup",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "Main",
                        "Arn"
                    ]
                },
                "timeout": "120",
                "config_table": {
                    "Ref": "ConfigTable"
                },
                "tagname": {
                    "Ref": "TagName"
                },
                "default_timezone": {
                    "Ref": "DefaultTimezone"
                },
                "use_metrics": {
                    "Fn::FindInMap": [
                        "TrueFalse",
                        {
                            "Ref": "UseCloudWatchMetrics"
                        },
                        "Value"
                    ]
                },
                "scheduled_services": {
                    "Fn::Split": [
                        ",",
                        {
                            "Fn::FindInMap": [
                                "Services",
                                {
                                    "Ref": "ScheduledServices"
                                },
                                "Value"
                            ]
                        }
                    ]
                },
                "schedule_clusters": {
                    "Fn::FindInMap": [
                        "TrueFalse",
                        {
                            "Ref": "ScheduleRdsClusters"
                        },
                        "Value"
                    ]
                },
                "create_rds_snapshot": {
                    "Fn::FindInMap": [
                        "TrueFalse",
                        {
                            "Ref": "CreateRdsSnapshot"
                        },
                        "Value"
                    ]
                },
                "regions": {
                    "Ref": "Regions"
                },
                "cross_account_roles": {
                    "Ref": "CrossAccountRoles"
                },
                "schedule_lambda_account": {
                    "Fn::FindInMap": [
                        "TrueFalse",
                        {
                            "Ref": "ScheduleLambdaAccount"
                        },
                        "Value"
                    ]
                },
                "trace": {
                    "Fn::FindInMap": [
                        "TrueFalse",
                        {
                            "Ref": "Trace"
                        },
                        "Value"
                    ]
                },
                "log_retention_days": {
                    "Ref": "LogRetentionDays"
                },
                "started_tags": {
                    "Ref": "StartedTags"
                },
                "stopped_tags": {
                    "Ref": "StoppedTags"
                },
                "stack_version": "v1.3.2"
            },
            "DependsOn": [
                "SchedulerLogGroup"
            ]
        }
    },
    "Outputs": {
        "AccountId": {
            "Value": {
                "Ref": "AWS::AccountId"
            },
            "Description": "Account to give access to when creating cross-account access role fro cross account scenario "
        },
        "ConfigurationTable": {
            "Value": {
                "Ref": "ConfigTable"
            },
            "Description": "Name of the DynomoDB configuration table"
        },
        "IssueSnsTopicArn": {
            "Value": {
                "Ref": "InstanceSchedulerSnsTopic"
            },
            "Description": "Topic to subscribe to for notifications of errors and warnings"
        },
        "SchedulerRoleArn": {
            "Value": {
                "Fn::GetAtt": [
                    "SchedulerRole",
                    "Arn"
                ]
            },
            "Description": "Role for the instance scheduler lambda function"
        },
        "ServiceInstanceScheduleServiceToken": {
            "Value": {
                "Fn::GetAtt": [
                    "Main",
                    "Arn"
                ]
            },
            "Description": "Arn to use as ServiceToken property for custom resource type Custom::ServiceInstanceSchedule"
        }
    }
}
